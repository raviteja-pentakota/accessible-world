const firebaseConfig = {

  apiKey: "AIzaSyBZUQXgfdDHrntbBVSVFf8Vvtp9V5qnERg",

  authDomain: "accessible-learn-and-win-ad21f.firebaseapp.com",

  projectId: "accessible-learn-and-win-ad21f",

  storageBucket: "accessible-learn-and-win-ad21f.firebasestorage.app",

  messagingSenderId: "299849578412",

  appId: "1:299849578412:web:1e66a3292e35578f102c09",

  measurementId: "G-G832YW57EK"

};


// Initialize Firebase

const app = initializeApp(firebaseConfig);

const analytics = getAnalytics(app);


		

Razorpay key:
test:
rzp_test_65YRKaINc6MqXg
Live:
rzp_live_jarrSjgdfymA2D
Key Secret
Sv710AdSgdlrEmZI8WCnalhS

{  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid"
      }
    },
    ".read": false, // Deny read access to the root by default
    ".write": false // Deny write access to the root by default
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 5, 13);
    }
  }
}

Service ID:service_tf84qzj
Template ID:template_ap7z4ao
public key: s345rP5aJdoory4jI